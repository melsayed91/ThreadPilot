// <auto-generated />
using System;
using Insurance.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Insurance.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(InsuranceDbContext))]
    partial class InsuranceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Insurance.Infrastructure.Persistence.Entities.InsurancePolicyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("MonthlyCostAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("MonthlyCostCurrency")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("VehicleRegNumber")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.HasIndex("PersonalNumber");

                    b.HasIndex("PersonalNumber", "VehicleRegNumber")
                        .IsUnique()
                        .HasFilter("\"Type\" = 3 AND \"VehicleRegNumber\" IS NOT NULL");

                    b.ToTable("InsurancePolicies", null, t =>
                        {
                            t.HasCheckConstraint("CK_InsurancePolicies_CarRequiresReg", "\"Type\" <> 3 OR \"VehicleRegNumber\" IS NOT NULL");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            MonthlyCostAmount = 10m,
                            MonthlyCostCurrency = "USD",
                            PersonalNumber = "19650101-1234",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            MonthlyCostAmount = 20m,
                            MonthlyCostCurrency = "USD",
                            PersonalNumber = "19650101-1234",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            MonthlyCostAmount = 30m,
                            MonthlyCostCurrency = "USD",
                            PersonalNumber = "19650101-1234",
                            Type = 3,
                            VehicleRegNumber = "ABC123"
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            MonthlyCostAmount = 30m,
                            MonthlyCostCurrency = "USD",
                            PersonalNumber = "19650101-1234",
                            Type = 3,
                            VehicleRegNumber = "XYZ999"
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            MonthlyCostAmount = 10m,
                            MonthlyCostCurrency = "USD",
                            PersonalNumber = "19700101-1111",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            MonthlyCostAmount = 20m,
                            MonthlyCostCurrency = "USD",
                            PersonalNumber = "19700101-1111",
                            Type = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
